<idea-plugin>
    <description><![CDATA[
        PIT Mutation Testing (pitest.org) for Gradle Project
        <br/>
        Bundled with PIT 1.16.1
        <br/><br/>
        Adds a 'Unittest Helpers' menu to the right-click context menu in the editor, and the `Run Mutation Test` action to the submenu.
        <br/>
        Adds a 'Mutation Test History' tool window to display the history of mutation tests for each of the `mutated` classes.
        <br/>
        You can navigate to the source code of the mutated class by searching on the class name with enter key.
        <br/>
        Adds rendering of the mutation test result on the code editor.
        <br/>
        Automatic detection of the classpath dependencies for running the mutation test, making use of the Gradle API from the IntelliJ IDEA.
        <br/>
        Support long classpath for running the mutation test, especially for enterprise projects when there are thousands of classes in the classpath; and even jar files from other locations.
        <br/>
        Additional classes in resource directory (marked as resource in IDE) are added to the classpath for mutation testing.
        <br/><br/>
        <b>Usage:</b> Right-click on a JUnit test file and select `Unittest Helpers` -> `Run Mutation Test` to run PIT mutation testing on the test file.
        <br/><br/>
      ]]></description>

    <version>1.0.1-beta</version>

    <vendor email="jaksonlin [at] gmail.com">Jason Lam</vendor>
    <id>com.github.jaksonlin.pitestintellij</id>
    <name>Pitest-Gradle</name>
    <vendor>jaksonlin</vendor>

    <depends>com.intellij.modules.platform</depends>
    <depends>com.intellij.modules.java</depends>
    <depends>Git4Idea</depends>

    <resource-bundle>messages.MyBundle</resource-bundle>

    <extensions defaultExtensionNs="com.intellij">
        <toolWindow factoryClass="com.github.jaksonlin.pitestintellij.toolWindow.MutationToolWindowFactory" id="MutationTestHistory" icon="/pitestHistoryWindowIcon.svg"/>
        <applicationConfigurable
            instance="com.github.jaksonlin.pitestintellij.ui.AnnotationConfigurable"
            id="com.github.jaksonlin.pitestintellij.settings"
            displayName="Unittest Annotation Configuration"/>
        <localInspection
            shortName="UnittestCaseAnnotationInspection"
            language="JAVA"
            implementationClass="com.github.jaksonlin.pitestintellij.inspectors.UnittestInspector"
            displayName="Unittest case management annotation inspection"
            enabledByDefault="false"
            groupName="Java"
            order="LAST"
        />
        <completion.contributor
                language="JAVA"
                implementationClass="com.github.jaksonlin.pitestintellij.completions.AnnotationCompletionContributor"/>
        <toolWindow id="LLM Suggestions" 
                    secondary="true"
                    icon="AllIcons.General.Add"
                    anchor="right"
                    factoryClass="com.github.jaksonlin.pitestintellij.toolWindow.LLMSuggestionsToolWindowFactory"/>
    </extensions>

    <applicationListeners>
        <listener class="com.github.jaksonlin.pitestintellij.listeners.MyApplicationActivationListener" topic="com.intellij.openapi.application.ApplicationActivationListener"/>
    </applicationListeners>

    <!-- Add right-click entry to run Pitest on a JUnit test file -->
    <actions>
        <!-- First Level Menu -->
        <group id="UnittestHelperToolMenu" text="Unittest Helpers" popup="true" description="Java unittest helper tool" icon="/utMenu.svg">
            <add-to-group group-id="EditorPopupMenu" anchor="last"/>
        </group>

        <!-- Second Level Submenu -->
        <group id="UnittestHelperSubMenu" text="Unittest Helper Tools">
            <add-to-group group-id="UnittestHelperToolMenu" anchor="last"/>
            <!-- Action inside the submenu -->
            <action
                    class="com.github.jaksonlin.pitestintellij.actions.RunPitestAction"
                    id="RunPitestAction"
                    text="Run Mutation Test">
            </action>
            <action class="com.github.jaksonlin.pitestintellij.actions.RunCaseAnnoationCheckAction"
                    id="RunCaseAnnoationCheckAction"
                    text="Run Current Method Annotation Check">
            </action>
            <action class="com.github.jaksonlin.pitestintellij.actions.GenerateAnnotationCommandAction"
                    id="GenerateAnnotationCommandAction"
                    text="Generate Annotation Command On Method">
            </action>

        </group>
    </actions>
</idea-plugin>
